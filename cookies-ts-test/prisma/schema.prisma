// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client"
  output   = "../src/generated"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  id           String         @id @default(uuid()) @db.Char(36)
  name         String         @unique @db.VarChar(255)
  price        Decimal        @db.Decimal(10, 2)
  stock        Int            @db.Int()
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  PurchaseItem PurchaseItem[]
}

model User {
  id         String     @id @default(uuid()) @db.Char(36)
  email      String     @unique @db.VarChar(255)
  password   String     @db.VarChar(255)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  userType   UserType   @relation(fields: [userTypeId], references: [id])
  userTypeId String
  Purchase   Purchase[]
}

model UserType {
  id        String   @id @default(uuid()) @db.Char(36)
  label     String   @unique @db.VarChar(45)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User[]
}

model Purchase {
  id           String         @id @default(uuid()) @db.Char(36)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  user         User           @relation(fields: [userId], references: [id])
  userId       String
  PurchaseItem PurchaseItem[]
}

model PurchaseItem {
  id         String   @id @default(uuid()) @db.Char(36)
  quantity   Int      @db.Int()
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  purchase   Purchase @relation(fields: [purchaseId], references: [id])
  purchaseId String
  product    Product  @relation(fields: [productId], references: [id])
  productId  String
}
